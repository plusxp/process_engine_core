{
  "type": "object",
  "properties": {
    "_datastoreService": {
      "$ref": "#/definitions/IDatastoreService"
    },
    "_datastoreServiceFactory": {
      "$ref": "#/definitions/IFactory<IDatastoreService>"
    },
    "_processRepository": {
      "$ref": "#/definitions/IProcessRepository"
    },
    "_invoker": {
      "$ref": "#/definitions/IInvoker"
    },
    "datastoreService": {
      "$ref": "#/definitions/IDatastoreService"
    },
    "invoker": {
      "$ref": "#/definitions/IInvoker"
    },
    "processRepository": {
      "$ref": "#/definitions/IProcessRepository"
    },
    "importBpmnFromFile": {
      "type": "object",
      "parameters": [
        {
          "name": "context",
          "type": "ExecutionContext"
        },
        {
          "name": "params",
          "type": "IParamImportFromFile"
        },
        {
          "name": "options",
          "optional": true,
          "type": "IImportFromFileOptions"
        }
      ],
      "returnType": "Promise",
      "returnTypeArguments": [
        {}
      ]
    },
    "importBpmnFromXml": {
      "type": "object",
      "parameters": [
        {
          "name": "context",
          "type": "ExecutionContext"
        },
        {
          "name": "params",
          "type": "IParamImportFromXml"
        },
        {
          "name": "options",
          "optional": true,
          "type": "IImportFromXmlOptions"
        }
      ],
      "returnType": "Promise",
      "returnTypeArguments": [
        {}
      ]
    },
    "parseBpmnXml": {
      "type": "object",
      "parameters": [
        {
          "name": "xml",
          "type": "string"
        }
      ],
      "returnType": "Promise",
      "returnTypeArguments": [
        {
          "type": "BpmnDiagram"
        }
      ]
    },
    "start": {
      "type": "object",
      "parameters": [
        {
          "name": "context",
          "type": "ExecutionContext"
        },
        {
          "name": "params",
          "type": "IParamStart"
        },
        {
          "name": "options",
          "optional": true,
          "type": "IPublicGetOptions"
        }
      ],
      "returnType": "Promise",
      "returnTypeArguments": [
        {
          "type": "IEntityReference"
        }
      ]
    }
  },
  "definitions": {
    "IDatastoreService": {
      "type": "object",
      "properties": {
        "config": {},
        "initialize": {
          "type": "object",
          "parameters": [],
          "returnType": "Promise",
          "returnTypeArguments": [
            {}
          ]
        },
        "getEntityTypeKeys": {
          "type": "object",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": "IGetEntityTypeKeysOptions"
            }
          ],
          "returnType": "Array",
          "returnTypeArguments": [
            {
              "type": "string"
            }
          ]
        },
        "getEntityType": {
          "type": "object",
          "parameters": [
            {
              "name": "typeName",
              "type": "string"
            }
          ],
          "typeParameters": [
            {
              "name": "T",
              "constraint": {
                "type": "IEntity"
              }
            }
          ],
          "returnType": "Promise",
          "returnTypeArguments": [
            {
              "type": "IEntityType",
              "typeArguments": [
                {
                  "type": "T"
                }
              ]
            }
          ]
        },
        "getEntityTypeService": {
          "type": "object",
          "parameters": [
            {
              "name": "typeName",
              "type": "string"
            }
          ],
          "returnType": "Promise",
          "returnTypeArguments": [
            {}
          ]
        },
        "getCatalog": {
          "type": "object",
          "parameters": [
            {
              "name": "context",
              "type": "ExecutionContext"
            }
          ]
        },
        "getCollection": {
          "type": "object",
          "parameters": [
            {
              "name": "typeName",
              "type": "string"
            },
            {
              "name": "context",
              "type": "ExecutionContext"
            },
            {
              "name": "options",
              "optional": true,
              "type": "IPublicGetOptions"
            }
          ],
          "typeParameters": [
            {
              "name": "T",
              "constraint": {
                "type": "IEntity"
              }
            }
          ],
          "returnType": "Promise",
          "returnTypeArguments": [
            {
              "type": "IEntityCollection"
            }
          ]
        },
        "getById": {
          "type": "object",
          "parameters": [
            {
              "name": "typeName",
              "type": "string"
            },
            {
              "name": "id",
              "type": "string"
            },
            {
              "name": "context",
              "type": "ExecutionContext"
            },
            {
              "name": "options",
              "optional": true,
              "type": "IPublicGetOptions"
            }
          ],
          "typeParameters": [
            {
              "name": "T",
              "constraint": {
                "type": "IEntity"
              }
            }
          ],
          "returnType": "Promise",
          "returnTypeArguments": [
            {
              "type": "T"
            }
          ]
        },
        "updateEntity": {
          "type": "object",
          "parameters": [
            {
              "name": "typeName",
              "type": "string"
            },
            {
              "name": "id",
              "type": "string"
            },
            {
              "name": "data"
            },
            {
              "name": "context",
              "type": "ExecutionContext"
            },
            {
              "name": "options",
              "optional": true,
              "type": "IPublicSaveOptions"
            }
          ],
          "typeParameters": [
            {
              "name": "T",
              "constraint": {
                "type": "IEntity"
              }
            }
          ],
          "returnType": "Promise",
          "returnTypeArguments": [
            {
              "type": "T"
            }
          ]
        },
        "saveNewEntity": {
          "type": "object",
          "parameters": [
            {
              "name": "typeName",
              "type": "string"
            },
            {
              "name": "data"
            },
            {
              "name": "context",
              "type": "ExecutionContext"
            },
            {
              "name": "options",
              "optional": true,
              "type": "IPublicSaveOptions"
            }
          ],
          "typeParameters": [
            {
              "name": "T",
              "constraint": {
                "type": "IEntity"
              }
            }
          ],
          "returnType": "Promise",
          "returnTypeArguments": [
            {
              "type": "T"
            }
          ]
        },
        "executeEntityMethod": {
          "type": "object",
          "parameters": [
            {
              "name": "typeName",
              "type": "string"
            },
            {
              "name": "id",
              "type": "string"
            },
            {
              "name": "method",
              "type": "string"
            },
            {
              "name": "data"
            },
            {
              "name": "context",
              "type": "ExecutionContext"
            },
            {
              "name": "options",
              "optional": true,
              "type": "IPublicGetOptions"
            }
          ],
          "returnType": "Promise",
          "returnTypeArguments": [
            {}
          ]
        },
        "executeEntityTypeMethod": {
          "type": "object",
          "parameters": [
            {
              "name": "typeName",
              "type": "string"
            },
            {
              "name": "method",
              "type": "string"
            },
            {
              "name": "data"
            },
            {
              "name": "context",
              "type": "ExecutionContext"
            },
            {
              "name": "options",
              "optional": true,
              "type": "IPublicGetOptions"
            }
          ],
          "returnType": "Promise",
          "returnTypeArguments": [
            {}
          ]
        },
        "removeEntity": {
          "type": "object",
          "parameters": [
            {
              "name": "typeName",
              "type": "string"
            },
            {
              "name": "id",
              "type": "string"
            },
            {
              "name": "context",
              "type": "ExecutionContext"
            },
            {
              "name": "options",
              "optional": true,
              "type": "IPublicRemoveOptions"
            }
          ],
          "typeParameters": [
            {
              "name": "T",
              "constraint": {
                "type": "IEntity"
              }
            }
          ],
          "returnType": "Promise",
          "returnTypeArguments": [
            {}
          ]
        }
      }
    },
    "IFactory<IDatastoreService>": {
      "type": "object"
    },
    "IProcessRepository": {
      "type": "object",
      "properties": {
        "initialize": {
          "type": "object",
          "parameters": []
        },
        "getProcess": {
          "type": "object",
          "parameters": [
            {
              "name": "processName",
              "type": "string"
            }
          ],
          "returnType": "IProcessEntry"
        },
        "getProcessesByCategory": {
          "type": "object",
          "parameters": [
            {
              "name": "category",
              "type": "string"
            }
          ],
          "returnType": "Array",
          "returnTypeArguments": [
            {
              "type": "IProcessEntry"
            }
          ]
        },
        "saveProcess": {
          "type": "object",
          "parameters": [
            {
              "name": "processName",
              "type": "string"
            },
            {
              "name": "process",
              "optional": true,
              "type": "string"
            }
          ],
          "returnType": "Promise",
          "returnTypeArguments": [
            {}
          ]
        },
        "getXmlFromFile": {
          "type": "object",
          "parameters": [
            {
              "name": "path",
              "type": "string"
            }
          ],
          "returnType": "Promise",
          "returnTypeArguments": [
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "IInvoker": {
      "type": "object",
      "properties": {
        "setInvocationForType": {
          "type": "object",
          "parameters": [
            {
              "name": "type",
              "type": "string"
            },
            {
              "name": "property",
              "type": "string"
            },
            {
              "name": "invocationType",
              "type": "InvocationType"
            },
            {
              "name": "func",
              "type": "Function"
            }
          ]
        },
        "setInvocationForInstance": {
          "type": "object",
          "parameters": [
            {
              "name": "instance",
              "type": "Object"
            },
            {
              "name": "property",
              "type": "string"
            },
            {
              "name": "invocationType",
              "type": "InvocationType"
            },
            {
              "name": "func",
              "type": "Function"
            }
          ]
        },
        "invoke": {
          "type": "object",
          "parameters": [
            {
              "name": "instance"
            },
            {
              "name": "property",
              "type": "string"
            },
            {
              "name": "namespace",
              "type": "string"
            },
            {
              "name": "context",
              "type": "ExecutionContext"
            },
            {
              "name": "restArgs",
              "type": "Array",
              "typeArguments": [
                {}
              ]
            }
          ],
          "returnType": "Promise",
          "returnTypeArguments": [
            {}
          ]
        }
      }
    }
  },
  "$schema": "http://json-schema.org/draft-06/schema#"
}